[project]
name = "tally-counter"
version = "0.0.7"
authors = [{ name = "Scott Houseman", email = "scott.houseman@gmail.com" }]
description = "A Python tally counter class"
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.8"
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3 :: Only",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Typing :: Typed",
]

keywords = ["statistics", "counter"]

dependencies = []

[project.optional-dependencies]

dev = [
  "pre-commit",
  "black",
  "ruff",
  "mypy",

  # Test dependencies
  "pytest",
  "pytest-cov",
  "pytest-mock",

  # PyPI
  "twine",
]

[project.urls]
repository = "https://github.com/houseman/tally-counter"

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]
include = ["tally_counter*"]
namespaces = false

[tool.ruff]
src = ["src"]
select = ["E", "F", "B", "W", "I", "N", "D"]
ignore = [
  "D107", # Missing docstring in `__init__`
  "D203", # 1 blank line required before class docstring
  "D212", # Multi-line docstring summary should start at the first line
]
# Same as Black.
line-length = 88
target-version = "py38"

[tool.ruff.per-file-ignores]
"**/tests/*" = [
  "D103", # Missing docstring in public function
  "D205", # 1 blank line required between summary line and description
  "D400", # First line should end with a period
  "D415", # First line should end with a period, question mark, or exclamation point
]

[tool.ruff.isort]
# Use a single line between direct and from import
lines-between-types = 1

[tool.black]
target-versions = ["py38"]

[tool.mypy]
files = ["src"]
python_version = 3.8
ignore_errors = false
disallow_untyped_calls = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_no_return = true

[[tool.mypy.overrides]]
module = ["tests.*", "noxfile", "conftest"]
ignore_errors = true

[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["tests"]
addopts = "--cov --cov-report html --cov-report term-missing --cov-report xml --no-cov-on-fail --cov-fail-under 100"

[tool.coverage.run]
branch = true
source = ["src"]
omit = ["tests/*"]

[tool.coverage.report]
fail_under = 100
skip_empty = true
show_missing = true
exclude_lines = [
  "pragma: no cover",
  "if TYPE_CHECKING:",
  "if t.TYPE_CHECKING:",
  "pass",
  "raise NotImplementedError()",
]
