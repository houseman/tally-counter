[project]
name = "tally-counter"
# version = "0.0.0" # setuptools_scm extracts the version number from the projectâ€™s git tags during the build process
dynamic = ["version"]
authors = [
  { name="Scott Houseman", email="scott.houseman@gmail.com" },
]
description = "A Python tally counter class"
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]

keywords = [
  "statistics",
  "counter"
]

dependencies = []

[project.optional-dependencies]

dev = [
  "black",
  "flake8",
  "isort",
  "mypy",
  "pyupgrade",
  "pre-commit",

  # Test dependencies
  "pytest",
  "pytest-cov[all]",
  "pytest-mock",

  # PyPI
  "twine"
]

[project.urls]
repository = "https://github.com/houseman/tally-counter"

[build-system]
requires = [
  "setuptools>=45",
  "setuptools_scm[toml]>=6.2"
]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = [
  "src"
]
include = [
  "tally_counter*"
]
namespaces = false

[tool.setuptools_scm]
write_to = "src/tally_counter/_version.py"

[tool.isort]
profile = "black"
src_paths = [
    "src",
    "test"
]
honor_noqa = true

[tool.mypy]
files = [
  "src"
]
python_version = 3.8
ignore_errors = false
disallow_untyped_calls = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_no_return = true

[[tool.mypy.overrides]]
module = [
  "tests.*",
  "noxfile",
  "conftest"
]
ignore_errors = true

[tool.pytest.ini_options]
pythonpath = [
  "src"
]
testpaths = [
    "tests"
]

[tool.coverage.run]
branch = true
source = [
  "tally_counter"
]
omit = [
  "tests/*"
]
