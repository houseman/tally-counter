# Runs builds on all operating sytems on opening of a pull request or push to main brnch
# Nox is used to run these builds for all supported Python versinns
name: Build

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, ready_for_review]
env:
  CURRENT_VERSION:
  MAIN_VERSION:

permissions:
  contents: read

jobs:
  version-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install semver
          pip install .
      - name: Get current version
        run: echo "CURRENT_VERSION=$(python -c 'import tally_counter; print(tally_counter.__version__)')" >> $GITHUB_ENV
      - name: Checkout main branch
        run: |
          git fetch origin main:main
          git checkout main
      - name: Get main version
        run: echo "MAIN_VERSION=$(python -c 'import tally_counter; print(tally_counter.__version__)')" >> $GITHUB_ENV
      - name: Checkout pushed branch
        run: git checkout -
      - name: Check version
        run: python -c "import semver; assert semver.compare('${{ env.CURRENT_VERSION }}', '${{ env.MAIN_VERSION }}') > 0, 'Version not bumped'"
  build:
    needs: version-check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python + Nox  om ${{ matrix.os }}
        uses: wntrblm/nox@2023.04.22
        with:
          python-versions: "3.8, 3.9, 3.10, 3.11"
      - name: Run linting
        run: |
          make lint
      - name: Run tests
        run: |
          make test
  # deploy:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   if: github.event_name == 'push' && github.brnch == 'main'
  #   steps:
  #       - uses: actions/checkout@v3
  #       - name: Build sdist and wheel
  #       run: pipx run build
  #       - name: Publish distribution PyPI
  #       uses: pypa/gh-action-pypi-publish@release/v1
  #       with:
  #           password: ${{ secrets.PYPI_API_TOKEN }}
